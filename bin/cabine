#!/bin/bash

# --------------------------------------------------------------------------------
# Script de lancement principal pour le projet Cabine
# --------------------------------------------------------------------------------
# 1. Vérifie si le script est lancé depuis ./bin/cabine
# 2. Vérifie le lien symbolique dans /usr/bin
# 3. Vérifie et initialise l'environnement virtuel .venv
# 4. Met à jour les dépendances Python
# --------------------------------------------------------------------------------

# === Constantes ===
SCRIPT_PATH=$(realpath "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
ROOT_DIR=$(dirname "$SCRIPT_DIR")
SYMLINK_PATH="/usr/bin/cabine"
VENV_DIR="$ROOT_DIR/.venv"
REQUIREMENTS_FILE="$ROOT_DIR/requirements.txt"
export LG_WD=/tmp
WORKDIR="$ROOT_DIR/src"
export WORKDIR
LANGUAGE="fr:en"
export LANGUAGE
# === 1. Vérification de l'emplacement d'exécution ===
if [[ "$SCRIPT_PATH" != "$ROOT_DIR/bin/cabine" ]]; then
    echo "[ERREUR] Ce script doit être lancé via ./bin/cabine"
    exit 1
fi

# === 2. Vérification et suggestion du lien symbolique ===
if [[ ! -L "$SYMLINK_PATH" ]]; then
    echo "[INFO] Le lien symbolique '$SYMLINK_PATH' n'est pas installé."
    echo "       Vous pouvez l'installer via : ./bin/install"
else
    echo "[INFO] Vous pouvez désormais lancer le programme simplement avec : cabine"
fi

# === 3. Initialisation de l'environnement virtuel ===
if [[ ! -d "$VENV_DIR" ]]; then
    echo "[INFO] Création de l'environnement virtuel dans .venv..."
    python3 -m venv --system-site-packages "$VENV_DIR" || { echo "[ERREUR] Échec de la création du venv"; exit 1; }
fi

# Active le venv
source "$VENV_DIR/bin/activate"

# === 4. Mise à jour des dépendances ===
echo "[INFO] Installation/mise à jour des dépendances..."
pip install -r "$REQUIREMENTS_FILE" || { echo "[ERREUR] Impossible d'installer les dépendances."; exit 1; }

# === 5. Lancement du programme principal Python ===
PYTHON_SCRIPT="$ROOT_DIR/src"

echo "[INFO] Lancement du programme..."
python "$PYTHON_SCRIPT" "$@"
